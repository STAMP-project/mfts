/*
 * generated by Xtext 2.12.0
 */
grammar InternalMFTS;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package eu.stamp.mfts.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eu.stamp.mfts.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eu.stamp.mfts.services.MFTSGrammarAccess;

}

@parser::members {

 	private MFTSGrammarAccess grammarAccess;

    public InternalMFTSParser(TokenStream input, MFTSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MFTSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getInterfacesServiceInterfaceParserRuleCall_0_0());
				}
				lv_interfaces_0_0=ruleServiceInterface
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"interfaces",
						lv_interfaces_0_0,
						"eu.stamp.mfts.MFTS.ServiceInterface");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getServicesServiceParserRuleCall_1_0());
				}
				lv_services_1_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"services",
						lv_services_1_0,
						"eu.stamp.mfts.MFTS.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getMessagesMessageParserRuleCall_2_0());
				}
				lv_messages_2_0=ruleMessage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"messages",
						lv_messages_2_0,
						"eu.stamp.mfts.MFTS.Message");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTestsTestSequenceParserRuleCall_3_0());
				}
				lv_tests_3_0=ruleTestSequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"tests",
						lv_tests_3_0,
						"eu.stamp.mfts.MFTS.TestSequence");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRulePlatformAnnotation
entryRulePlatformAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlatformAnnotationRule()); }
	iv_rulePlatformAnnotation=rulePlatformAnnotation
	{ $current=$iv_rulePlatformAnnotation.current; }
	EOF;

// Rule PlatformAnnotation
rulePlatformAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ANNOTATION_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPlatformAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlatformAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"eu.stamp.mfts.MFTS.ANNOTATION_ID");
				}
			)
		)
		(
			(
				(
					lv_value_1_0=RULE_STRING
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPlatformAnnotationAccess().getValueSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPlatformAnnotationRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"eu.stamp.mfts.MFTS.STRING");
					}
				)
			)
			    |
			(
				(
					lv_value_2_0=RULE_EXTERN
					{
						newLeafNode(lv_value_2_0, grammarAccess.getPlatformAnnotationAccess().getValueEXTERNTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPlatformAnnotationRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"eu.stamp.mfts.MFTS.EXTERN");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleServiceInterface
entryRuleServiceInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceInterfaceRule()); }
	iv_ruleServiceInterface=ruleServiceInterface
	{ $current=$iv_ruleServiceInterface.current; }
	EOF;

// Rule ServiceInterface
ruleServiceInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='interface'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceInterfaceAccess().getInterfaceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceInterfaceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceInterfaceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"eu.stamp.mfts.MFTS.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceInterfaceAccess().getAnnotationsPlatformAnnotationParserRuleCall_2_0());
				}
				lv_annotations_2_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceInterfaceRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_2_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceInterfaceAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				otherlv_4='sends'
				{
					newLeafNode(otherlv_4, grammarAccess.getServiceInterfaceAccess().getSendsKeyword_4_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getServiceInterfaceRule());
							}
						}
						otherlv_5=RULE_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getServiceInterfaceAccess().getSendsMessageCrossReference_4_0_1_0());
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getServiceInterfaceAccess().getCommaKeyword_4_0_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getServiceInterfaceRule());
								}
							}
							otherlv_7=RULE_ID
							{
								newLeafNode(otherlv_7, grammarAccess.getServiceInterfaceAccess().getSendsMessageCrossReference_4_0_2_1_0());
							}
						)
					)
				)*
			)
			    |
			(
				otherlv_8='receives'
				{
					newLeafNode(otherlv_8, grammarAccess.getServiceInterfaceAccess().getReceivesKeyword_4_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getServiceInterfaceRule());
							}
						}
						otherlv_9=RULE_ID
						{
							newLeafNode(otherlv_9, grammarAccess.getServiceInterfaceAccess().getReceivesMessageCrossReference_4_1_1_0());
						}
					)
				)
				(
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getServiceInterfaceAccess().getCommaKeyword_4_1_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getServiceInterfaceRule());
								}
							}
							otherlv_11=RULE_ID
							{
								newLeafNode(otherlv_11, grammarAccess.getServiceInterfaceAccess().getReceivesMessageCrossReference_4_1_2_1_0());
							}
						)
					)
				)*
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getServiceInterfaceAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	iv_ruleMessage=ruleMessage
	{ $current=$iv_ruleMessage.current; }
	EOF;

// Rule Message
ruleMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='message'
		{
			newLeafNode(otherlv_0, grammarAccess.getMessageAccess().getMessageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMessageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"eu.stamp.mfts.MFTS.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMessageAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageAccess().getParametersParameterParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"eu.stamp.mfts.MFTS.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMessageAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMessageAccess().getParametersParameterParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMessageRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"eu.stamp.mfts.MFTS.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMessageAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageAccess().getAnnotationsPlatformAnnotationParserRuleCall_5_0());
				}
				lv_annotations_7_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_7_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"eu.stamp.mfts.MFTS.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getAnnotationsPlatformAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"eu.stamp.mfts.MFTS.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getInterfacesServiceInterfaceCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getServiceAccess().getInterfacesServiceInterfaceCrossReference_4_1_0());
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getAnnotationsPlatformAnnotationParserRuleCall_5_0());
				}
				lv_annotations_6_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_6_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTestSequence
entryRuleTestSequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestSequenceRule()); }
	iv_ruleTestSequence=ruleTestSequence
	{ $current=$iv_ruleTestSequence.current; }
	EOF;

// Rule TestSequence
ruleTestSequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='test'
		{
			newLeafNode(otherlv_0, grammarAccess.getTestSequenceAccess().getTestKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTestSequenceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTestSequenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"eu.stamp.mfts.MFTS.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTestSequenceAccess().getAnnotationsPlatformAnnotationParserRuleCall_2_0());
				}
				lv_annotations_2_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestSequenceRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_2_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTestSequenceAccess().getActionsSeqParserRuleCall_3_0());
				}
				lv_actions_3_0=ruleSeq
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestSequenceRule());
					}
					set(
						$current,
						"actions",
						lv_actions_3_0,
						"eu.stamp.mfts.MFTS.Seq");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getWaitParserRuleCall_0());
		}
		this_Wait_0=ruleWait
		{
			$current = $this_Wait_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSendParserRuleCall_1());
		}
		this_Send_1=ruleSend
		{
			$current = $this_Send_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getExpectParserRuleCall_2());
		}
		this_Expect_2=ruleExpect
		{
			$current = $this_Expect_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getParParserRuleCall_3());
		}
		this_Par_3=rulePar
		{
			$current = $this_Par_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSeqParserRuleCall_4());
		}
		this_Seq_4=ruleSeq
		{
			$current = $this_Seq_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePar
entryRulePar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParRule()); }
	iv_rulePar=rulePar
	{ $current=$iv_rulePar.current; }
	EOF;

// Rule Par
rulePar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='par'
		{
			newLeafNode(otherlv_0, grammarAccess.getParAccess().getParKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"eu.stamp.mfts.MFTS.ID");
				}
			)
		)?
		otherlv_2='within'
		{
			newLeafNode(otherlv_2, grammarAccess.getParAccess().getWithinKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParAccess().getTimeTimeIntervalParserRuleCall_3_0());
				}
				lv_time_3_0=ruleTimeInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParRule());
					}
					set(
						$current,
						"time",
						lv_time_3_0,
						"eu.stamp.mfts.MFTS.TimeInterval");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParAccess().getAnnotationsPlatformAnnotationParserRuleCall_4_0());
				}
				lv_annotations_4_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_4_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getParAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParAccess().getActionsActionParserRuleCall_6_0());
				}
				lv_actions_6_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParRule());
					}
					add(
						$current,
						"actions",
						lv_actions_6_0,
						"eu.stamp.mfts.MFTS.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getParAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSeq
entryRuleSeq returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeqRule()); }
	iv_ruleSeq=ruleSeq
	{ $current=$iv_ruleSeq.current; }
	EOF;

// Rule Seq
ruleSeq returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getSeqAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSeqAccess().getActionsActionParserRuleCall_1_0());
				}
				lv_actions_1_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSeqRule());
					}
					add(
						$current,
						"actions",
						lv_actions_1_0,
						"eu.stamp.mfts.MFTS.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getSeqAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleWait
entryRuleWait returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWaitRule()); }
	iv_ruleWait=ruleWait
	{ $current=$iv_ruleWait.current; }
	EOF;

// Rule Wait
ruleWait returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='wait'
		{
			newLeafNode(otherlv_0, grammarAccess.getWaitAccess().getWaitKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWaitAccess().getTimeTimeIntervalParserRuleCall_1_0());
				}
				lv_time_1_0=ruleTimeInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWaitRule());
					}
					set(
						$current,
						"time",
						lv_time_1_0,
						"eu.stamp.mfts.MFTS.TimeInterval");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSend
entryRuleSend returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendRule()); }
	iv_ruleSend=ruleSend
	{ $current=$iv_ruleSend.current; }
	EOF;

// Rule Send
ruleSend returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='send'
		{
			newLeafNode(otherlv_0, grammarAccess.getSendAccess().getSendKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSendRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSendAccess().getServiceServiceCrossReference_1_0());
				}
			)
		)
		otherlv_2='!'
		{
			newLeafNode(otherlv_2, grammarAccess.getSendAccess().getExclamationMarkKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSendRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSendAccess().getMessageMessageCrossReference_3_0());
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getSendAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSendAccess().getParametersExpressionParserRuleCall_5_0_0());
					}
					lv_parameters_5_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSendRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_5_0,
							"eu.stamp.mfts.MFTS.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getSendAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSendAccess().getParametersExpressionParserRuleCall_5_1_1_0());
						}
						lv_parameters_7_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSendRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_7_0,
								"eu.stamp.mfts.MFTS.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getSendAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSendAccess().getAnnotationsPlatformAnnotationParserRuleCall_7_0());
				}
				lv_annotations_9_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_9_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleExpect
entryRuleExpect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpectRule()); }
	iv_ruleExpect=ruleExpect
	{ $current=$iv_ruleExpect.current; }
	EOF;

// Rule Expect
ruleExpect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='expect'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpectAccess().getExpectKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpectRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getExpectAccess().getServiceServiceCrossReference_1_0());
				}
			)
		)
		otherlv_2='?'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpectAccess().getQuestionMarkKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpectRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getExpectAccess().getMessageMessageCrossReference_3_0());
				}
			)
		)
		otherlv_4='within'
		{
			newLeafNode(otherlv_4, grammarAccess.getExpectAccess().getWithinKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpectAccess().getTimeTimeIntervalParserRuleCall_5_0());
				}
				lv_time_5_0=ruleTimeInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpectRule());
					}
					set(
						$current,
						"time",
						lv_time_5_0,
						"eu.stamp.mfts.MFTS.TimeInterval");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpectAccess().getAnnotationsPlatformAnnotationParserRuleCall_6_0());
				}
				lv_annotations_6_0=rulePlatformAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_6_0,
						"eu.stamp.mfts.MFTS.PlatformAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_7='assert'
			{
				newLeafNode(otherlv_7, grammarAccess.getExpectAccess().getAssertKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpectAccess().getAssertsExpressionParserRuleCall_7_1_0());
					}
					lv_asserts_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpectRule());
						}
						add(
							$current,
							"asserts",
							lv_asserts_8_0,
							"eu.stamp.mfts.MFTS.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTimeInterval
entryRuleTimeInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeIntervalRule()); }
	iv_ruleTimeInterval=ruleTimeInterval
	{ $current=$iv_ruleTimeInterval.current; }
	EOF;

// Rule TimeInterval
ruleTimeInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeIntervalAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_min_1_0=RULE_INT
				{
					newLeafNode(lv_min_1_0, grammarAccess.getTimeIntervalAccess().getMinINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeIntervalRule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_1_0,
						"eu.stamp.mfts.MFTS.INT");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeIntervalAccess().getColonKeyword_2());
		}
		(
			(
				lv_max_3_0=RULE_INT
				{
					newLeafNode(lv_max_3_0, grammarAccess.getTimeIntervalAccess().getMaxINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeIntervalRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_3_0,
						"eu.stamp.mfts.MFTS.INT");
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getTimeIntervalAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getExternExpressionParserRuleCall_0());
		}
		this_ExternExpression_0=ruleExternExpression
		{
			$current = $this_ExternExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getByteLiteralParserRuleCall_1());
		}
		this_ByteLiteral_1=ruleByteLiteral
		{
			$current = $this_ByteLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getCharLiteralParserRuleCall_2());
		}
		this_CharLiteral_2=ruleCharLiteral
		{
			$current = $this_CharLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getIntegerLiteralParserRuleCall_3());
		}
		this_IntegerLiteral_3=ruleIntegerLiteral
		{
			$current = $this_IntegerLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBooleanLiteralParserRuleCall_4());
		}
		this_BooleanLiteral_4=ruleBooleanLiteral
		{
			$current = $this_BooleanLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getStringLiteralParserRuleCall_5());
		}
		this_StringLiteral_5=ruleStringLiteral
		{
			$current = $this_StringLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getDoubleLiteralParserRuleCall_6());
		}
		this_DoubleLiteral_6=ruleDoubleLiteral
		{
			$current = $this_DoubleLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExternExpression
entryRuleExternExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternExpressionRule()); }
	iv_ruleExternExpression=ruleExternExpression
	{ $current=$iv_ruleExternExpression.current; }
	EOF;

// Rule ExternExpression
ruleExternExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_expression_0_0=RULE_EXTERN
				{
					newLeafNode(lv_expression_0_0, grammarAccess.getExternExpressionAccess().getExpressionEXTERNTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_0_0,
						"eu.stamp.mfts.MFTS.EXTERN");
				}
			)
		)
		(
			otherlv_1='&'
			{
				newLeafNode(otherlv_1, grammarAccess.getExternExpressionAccess().getAmpersandKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExternExpressionAccess().getSegmentsExpressionParserRuleCall_1_1_0());
					}
					lv_segments_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExternExpressionRule());
						}
						add(
							$current,
							"segments",
							lv_segments_2_0,
							"eu.stamp.mfts.MFTS.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleByteLiteral
entryRuleByteLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getByteLiteralRule()); }
	iv_ruleByteLiteral=ruleByteLiteral
	{ $current=$iv_ruleByteLiteral.current; }
	EOF;

// Rule ByteLiteral
ruleByteLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_byteValue_0_0=RULE_BYTE
			{
				newLeafNode(lv_byteValue_0_0, grammarAccess.getByteLiteralAccess().getByteValueBYTETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getByteLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"byteValue",
					lv_byteValue_0_0,
					"eu.stamp.mfts.MFTS.BYTE");
			}
		)
	)
;

// Entry rule entryRuleCharLiteral
entryRuleCharLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharLiteralRule()); }
	iv_ruleCharLiteral=ruleCharLiteral
	{ $current=$iv_ruleCharLiteral.current; }
	EOF;

// Rule CharLiteral
ruleCharLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_charValue_0_0=RULE_CHAR
			{
				newLeafNode(lv_charValue_0_0, grammarAccess.getCharLiteralAccess().getCharValueCHARTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCharLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"charValue",
					lv_charValue_0_0,
					"eu.stamp.mfts.MFTS.CHAR");
			}
		)
	)
;

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerLiteralRule()); }
	iv_ruleIntegerLiteral=ruleIntegerLiteral
	{ $current=$iv_ruleIntegerLiteral.current; }
	EOF;

// Rule IntegerLiteral
ruleIntegerLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_intValue_0_0=RULE_INT
			{
				newLeafNode(lv_intValue_0_0, grammarAccess.getIntegerLiteralAccess().getIntValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntegerLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"intValue",
					lv_intValue_0_0,
					"eu.stamp.mfts.MFTS.INT");
			}
		)
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current; }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_boolValue_0_0='true'
				{
					newLeafNode(lv_boolValue_0_0, grammarAccess.getBooleanLiteralAccess().getBoolValueTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralRule());
					}
					setWithLastConsumed($current, "boolValue", true, "true");
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_1_0(),
						$current);
				}
			)
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_stringValue_0_0=RULE_STRING
			{
				newLeafNode(lv_stringValue_0_0, grammarAccess.getStringLiteralAccess().getStringValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"stringValue",
					lv_stringValue_0_0,
					"eu.stamp.mfts.MFTS.STRING");
			}
		)
	)
;

// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoubleLiteralRule()); }
	iv_ruleDoubleLiteral=ruleDoubleLiteral
	{ $current=$iv_ruleDoubleLiteral.current; }
	EOF;

// Rule DoubleLiteral
ruleDoubleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_doubleValue_0_0=RULE_FLOAT
			{
				newLeafNode(lv_doubleValue_0_0, grammarAccess.getDoubleLiteralAccess().getDoubleValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDoubleLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"doubleValue",
					lv_doubleValue_0_0,
					"eu.stamp.mfts.MFTS.FLOAT");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_BYTE : '0x' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F');

RULE_CHAR : '\'' ('\\0'|'\\t'|'\\n'|'\\r'|' '..'&'|'\\\''|'('..'['|'\\\\'|']'..'~') '\'';

RULE_INT : ('0'..'9')+;

RULE_FLOAT : (('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)?|'.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?|('0'..'9')+ ('e'|'E') ('+'|'-')? ('0'..'9')+);

RULE_ANNOTATION_ID : '@' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_EXTERN : '`' ('\\' .|~(('\\'|'`')))* '`';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
