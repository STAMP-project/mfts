/*
 * generated by Xtext 2.12.0
 */
package eu.stamp.mfts.ide.contentassist.antlr;

import com.google.inject.Inject;
import eu.stamp.mfts.ide.contentassist.antlr.internal.InternalMFTSParser;
import eu.stamp.mfts.services.MFTSGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class MFTSParser extends AbstractContentAssistParser {

	@Inject
	private MFTSGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMFTSParser createParser() {
		InternalMFTSParser result = new InternalMFTSParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getAlternatives(), "rule__Model__Alternatives");
					put(grammarAccess.getPlatformAnnotationAccess().getAlternatives_1(), "rule__PlatformAnnotation__Alternatives_1");
					put(grammarAccess.getServiceInterfaceAccess().getAlternatives_4(), "rule__ServiceInterface__Alternatives_4");
					put(grammarAccess.getActionAccess().getAlternatives(), "rule__Action__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives(), "rule__BooleanLiteral__Alternatives");
					put(grammarAccess.getPlatformAnnotationAccess().getGroup(), "rule__PlatformAnnotation__Group__0");
					put(grammarAccess.getServiceInterfaceAccess().getGroup(), "rule__ServiceInterface__Group__0");
					put(grammarAccess.getServiceInterfaceAccess().getGroup_4_0(), "rule__ServiceInterface__Group_4_0__0");
					put(grammarAccess.getServiceInterfaceAccess().getGroup_4_0_2(), "rule__ServiceInterface__Group_4_0_2__0");
					put(grammarAccess.getServiceInterfaceAccess().getGroup_4_1(), "rule__ServiceInterface__Group_4_1__0");
					put(grammarAccess.getServiceInterfaceAccess().getGroup_4_1_2(), "rule__ServiceInterface__Group_4_1_2__0");
					put(grammarAccess.getMessageAccess().getGroup(), "rule__Message__Group__0");
					put(grammarAccess.getMessageAccess().getGroup_3(), "rule__Message__Group_3__0");
					put(grammarAccess.getMessageAccess().getGroup_3_1(), "rule__Message__Group_3_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
					put(grammarAccess.getServiceAccess().getGroup_4(), "rule__Service__Group_4__0");
					put(grammarAccess.getTestSequenceAccess().getGroup(), "rule__TestSequence__Group__0");
					put(grammarAccess.getParAccess().getGroup(), "rule__Par__Group__0");
					put(grammarAccess.getSeqAccess().getGroup(), "rule__Seq__Group__0");
					put(grammarAccess.getWaitAccess().getGroup(), "rule__Wait__Group__0");
					put(grammarAccess.getSendAccess().getGroup(), "rule__Send__Group__0");
					put(grammarAccess.getSendAccess().getGroup_5(), "rule__Send__Group_5__0");
					put(grammarAccess.getSendAccess().getGroup_5_1(), "rule__Send__Group_5_1__0");
					put(grammarAccess.getExpectAccess().getGroup(), "rule__Expect__Group__0");
					put(grammarAccess.getExpectAccess().getGroup_7(), "rule__Expect__Group_7__0");
					put(grammarAccess.getTimeIntervalAccess().getGroup(), "rule__TimeInterval__Group__0");
					put(grammarAccess.getExternExpressionAccess().getGroup(), "rule__ExternExpression__Group__0");
					put(grammarAccess.getExternExpressionAccess().getGroup_1(), "rule__ExternExpression__Group_1__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup_1(), "rule__BooleanLiteral__Group_1__0");
					put(grammarAccess.getModelAccess().getInterfacesAssignment_0(), "rule__Model__InterfacesAssignment_0");
					put(grammarAccess.getModelAccess().getServicesAssignment_1(), "rule__Model__ServicesAssignment_1");
					put(grammarAccess.getModelAccess().getMessagesAssignment_2(), "rule__Model__MessagesAssignment_2");
					put(grammarAccess.getModelAccess().getTestsAssignment_3(), "rule__Model__TestsAssignment_3");
					put(grammarAccess.getPlatformAnnotationAccess().getNameAssignment_0(), "rule__PlatformAnnotation__NameAssignment_0");
					put(grammarAccess.getPlatformAnnotationAccess().getValueAssignment_1_0(), "rule__PlatformAnnotation__ValueAssignment_1_0");
					put(grammarAccess.getPlatformAnnotationAccess().getValueAssignment_1_1(), "rule__PlatformAnnotation__ValueAssignment_1_1");
					put(grammarAccess.getServiceInterfaceAccess().getNameAssignment_1(), "rule__ServiceInterface__NameAssignment_1");
					put(grammarAccess.getServiceInterfaceAccess().getAnnotationsAssignment_2(), "rule__ServiceInterface__AnnotationsAssignment_2");
					put(grammarAccess.getServiceInterfaceAccess().getSendsAssignment_4_0_1(), "rule__ServiceInterface__SendsAssignment_4_0_1");
					put(grammarAccess.getServiceInterfaceAccess().getSendsAssignment_4_0_2_1(), "rule__ServiceInterface__SendsAssignment_4_0_2_1");
					put(grammarAccess.getServiceInterfaceAccess().getReceivesAssignment_4_1_1(), "rule__ServiceInterface__ReceivesAssignment_4_1_1");
					put(grammarAccess.getServiceInterfaceAccess().getReceivesAssignment_4_1_2_1(), "rule__ServiceInterface__ReceivesAssignment_4_1_2_1");
					put(grammarAccess.getMessageAccess().getNameAssignment_1(), "rule__Message__NameAssignment_1");
					put(grammarAccess.getMessageAccess().getParametersAssignment_3_0(), "rule__Message__ParametersAssignment_3_0");
					put(grammarAccess.getMessageAccess().getParametersAssignment_3_1_1(), "rule__Message__ParametersAssignment_3_1_1");
					put(grammarAccess.getMessageAccess().getAnnotationsAssignment_5(), "rule__Message__AnnotationsAssignment_5");
					put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
					put(grammarAccess.getParameterAccess().getAnnotationsAssignment_1(), "rule__Parameter__AnnotationsAssignment_1");
					put(grammarAccess.getServiceAccess().getNameAssignment_1(), "rule__Service__NameAssignment_1");
					put(grammarAccess.getServiceAccess().getInterfacesAssignment_3(), "rule__Service__InterfacesAssignment_3");
					put(grammarAccess.getServiceAccess().getInterfacesAssignment_4_1(), "rule__Service__InterfacesAssignment_4_1");
					put(grammarAccess.getServiceAccess().getAnnotationsAssignment_5(), "rule__Service__AnnotationsAssignment_5");
					put(grammarAccess.getTestSequenceAccess().getNameAssignment_1(), "rule__TestSequence__NameAssignment_1");
					put(grammarAccess.getTestSequenceAccess().getAnnotationsAssignment_2(), "rule__TestSequence__AnnotationsAssignment_2");
					put(grammarAccess.getTestSequenceAccess().getActionsAssignment_3(), "rule__TestSequence__ActionsAssignment_3");
					put(grammarAccess.getParAccess().getNameAssignment_1(), "rule__Par__NameAssignment_1");
					put(grammarAccess.getParAccess().getTimeAssignment_3(), "rule__Par__TimeAssignment_3");
					put(grammarAccess.getParAccess().getAnnotationsAssignment_4(), "rule__Par__AnnotationsAssignment_4");
					put(grammarAccess.getParAccess().getActionsAssignment_6(), "rule__Par__ActionsAssignment_6");
					put(grammarAccess.getSeqAccess().getActionsAssignment_1(), "rule__Seq__ActionsAssignment_1");
					put(grammarAccess.getWaitAccess().getTimeAssignment_1(), "rule__Wait__TimeAssignment_1");
					put(grammarAccess.getSendAccess().getServiceAssignment_1(), "rule__Send__ServiceAssignment_1");
					put(grammarAccess.getSendAccess().getMessageAssignment_3(), "rule__Send__MessageAssignment_3");
					put(grammarAccess.getSendAccess().getParametersAssignment_5_0(), "rule__Send__ParametersAssignment_5_0");
					put(grammarAccess.getSendAccess().getParametersAssignment_5_1_1(), "rule__Send__ParametersAssignment_5_1_1");
					put(grammarAccess.getSendAccess().getAnnotationsAssignment_7(), "rule__Send__AnnotationsAssignment_7");
					put(grammarAccess.getExpectAccess().getServiceAssignment_1(), "rule__Expect__ServiceAssignment_1");
					put(grammarAccess.getExpectAccess().getMessageAssignment_3(), "rule__Expect__MessageAssignment_3");
					put(grammarAccess.getExpectAccess().getTimeAssignment_5(), "rule__Expect__TimeAssignment_5");
					put(grammarAccess.getExpectAccess().getAnnotationsAssignment_6(), "rule__Expect__AnnotationsAssignment_6");
					put(grammarAccess.getExpectAccess().getAssertsAssignment_7_1(), "rule__Expect__AssertsAssignment_7_1");
					put(grammarAccess.getTimeIntervalAccess().getMinAssignment_1(), "rule__TimeInterval__MinAssignment_1");
					put(grammarAccess.getTimeIntervalAccess().getMaxAssignment_3(), "rule__TimeInterval__MaxAssignment_3");
					put(grammarAccess.getExternExpressionAccess().getExpressionAssignment_0(), "rule__ExternExpression__ExpressionAssignment_0");
					put(grammarAccess.getExternExpressionAccess().getSegmentsAssignment_1_1(), "rule__ExternExpression__SegmentsAssignment_1_1");
					put(grammarAccess.getByteLiteralAccess().getByteValueAssignment(), "rule__ByteLiteral__ByteValueAssignment");
					put(grammarAccess.getCharLiteralAccess().getCharValueAssignment(), "rule__CharLiteral__CharValueAssignment");
					put(grammarAccess.getIntegerLiteralAccess().getIntValueAssignment(), "rule__IntegerLiteral__IntValueAssignment");
					put(grammarAccess.getBooleanLiteralAccess().getBoolValueAssignment_0(), "rule__BooleanLiteral__BoolValueAssignment_0");
					put(grammarAccess.getStringLiteralAccess().getStringValueAssignment(), "rule__StringLiteral__StringValueAssignment");
					put(grammarAccess.getDoubleLiteralAccess().getDoubleValueAssignment(), "rule__DoubleLiteral__DoubleValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MFTSGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MFTSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
